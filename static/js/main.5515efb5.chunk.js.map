{"version":3,"sources":["Header.js","Form.js","Footer.js","Results.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","superagent","require","Form","props","console","log","handleChange","e","state","setState","url","target","value","handleChangeRadio","method","handleSubmit","preventDefault","get","then","data","handler","body","count","header","post","put","delete","onSubmit","this","for","type","onChange","name","data-testid","onClick","handleClick","React","Component","Footer","Results","results","src","theme","App","handleForm","Count","headers","num","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAUiBA,G,MAPF,WACX,OACE,iCACE,oBAAIC,GAAG,QAAP,uBCHJC,G,MAAWC,EAAQ,KAuFRC,E,kDApFX,WAAYC,GAAQ,IAAD,6BACfC,QAAQC,IAAI,QAAQF,IACpB,cAAMA,IAMVG,aAAe,SAACC,GACZH,QAAQC,IAAI,KAAM,EAAKG,OACvB,EAAKC,SAAS,CAAEC,IAAKH,EAAEI,OAAOC,QAE9BR,QAAQC,IAAI,aAAc,EAAKG,QAZhB,EAenBK,kBAAoB,SAACN,GACjBH,QAAQC,IAAI,KAAM,EAAKG,OACvB,EAAKC,SAAS,CAAEK,OAAQP,EAAEI,OAAOC,QAEjCR,QAAQC,IAAI,aAAc,EAAKG,QAnBhB,EAsBnBO,aAAe,SAACR,GAIZ,OAHAA,EAAES,iBAGK,EAAKR,MAAMM,QACd,IAAK,MACPd,EAAWiB,IAAX,UAAkB,EAAKT,MAAME,MAAOQ,MAAK,SAAAC,GACvCf,QAAQC,IAAI,MAAMc,GAClB,EAAKhB,MAAMiB,QAAQD,EAAKE,KAAKC,MAAMH,EAAKE,KAAKF,EAAKI,WAEhD,MACF,IAAK,OACRvB,EAAWwB,KAAX,UAAmB,EAAKhB,MAAME,MAAOQ,MAAK,SAAAC,GAAI,OAAEf,QAAQC,IAAI,MAAMc,MAC7D,MACN,IAAK,MACLnB,EAAWyB,IAAX,UAAkB,EAAKjB,MAAME,MAAOQ,MAAK,SAAAC,GAAI,OAAEf,QAAQC,IAAI,MAAMc,MAC7D,MACJ,IAAK,SACLnB,EAAW0B,OAAX,UAAqB,EAAKlB,MAAME,MAAOQ,MAAK,SAAAC,GAAI,OAAEf,QAAQC,IAAI,MAAMc,QApCpE,EAAKX,MAAQ,CAAEE,IAAK,MAAOI,OAAQ,OAJpB,E,qDA+DnB,OACI,+BACD,uBAAMa,SAAUC,KAAKb,aAArB,UACQ,wBAAOc,IAAI,QAAX,iBAAuB,uBAAOC,KAAK,OAAOC,SAAUH,KAAKtB,kBAC1D,uBACE,uBACH,wBAAOuB,IAAI,MAAX,gBAAoB,uBAAQC,KAAK,QAAQ/B,GAAG,MAAMiC,KAAK,SAASD,SAAUH,KAAKf,kBAAmBD,MAAM,WAEvG,wBAAOiB,IAAI,OAAX,kBAAuB,uBAAOC,KAAK,QAAQ/B,GAAG,OAAOiC,KAAK,SAASD,SAAUH,KAAKf,kBAAmBD,MAAM,YAE7G,wBAAOiB,IAAI,MAAX,iBAAqB,uBAAOC,KAAK,QAAQ/B,GAAG,MAAMiC,KAAK,SAASD,SAAUH,KAAKf,kBAAmBD,MAAM,WAE1G,wBAAOiB,IAAI,SAAX,qBAA4B,uBAAOC,KAAK,QAAQ/B,GAAG,SAASiC,KAAK,SAASD,SAAUH,KAAKf,kBAAmBD,MAAM,cAElH,wBAAQqB,cAAY,SAASH,KAAK,SAASI,QAASN,KAAKO,YAAzD,2B,GA9EUC,IAAMC,WCFXC,G,MADA,kBAAM,0D,gBCAN,SAASC,EAAT,GAA0C,IAAxBjB,EAAuB,EAAvBA,MAAMkB,EAAiB,EAAjBA,QAAQjB,EAAS,EAATA,OAC7C,OACC,gCACE,uCAAUD,KACV,mBAAGvB,GAAG,SAAN,SAAe,cAAC,IAAD,CAAWiC,KAAK,SAASS,IAAKlB,EAAQmB,MAAM,cAC3D,0CAAY,cAAC,IAAD,CAAYV,KAAK,WAAWS,IAAKD,EAASE,MAAM,kB,IC0ClDC,E,kDAtCb,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAQRyC,WAAa,SAACtB,EAAMkB,EAAQjB,GAC1BnB,QAAQC,IAAI,kBAAmBmC,GAC/B,EAAK/B,SAAS,CAACoC,MAAMvB,EAAMiB,QAAQC,EAAQM,QAAQvB,KATnD,EAAKf,MAAQ,CACXqC,MAAM,EACNN,QAAS,GACTO,QAAQ,GACRC,IAAI,GANW,E,qDAyBjB,OACE,qCAEE,cAAC,EAAD,IAEA,cAAC,EAAD,CAAMC,MAAO,uBAAwB5B,QAASQ,KAAKgB,WAAYG,IAAKnB,KAAKmB,MACzE,cAACR,EAAD,CAAUjB,MAAOM,KAAKpB,MAAMqC,MAAOL,QAAUZ,KAAKpB,MAAM+B,QAAUhB,OAAQK,KAAKpB,MAAMsC,UACrF,cAAC,EAAD,W,GAjCUV,IAAMC,WCETY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5515efb5.chunk.js","sourcesContent":["import './Header.scss';\n\n\nconst Header = () => {\n    return (\n      <header >\n        <h1 id=\"bayan\">RESTy</h1>\n      </header>\n    );\n  };\n  export default Header;\n","\nimport './Form.scss';\nimport React from 'react';\nlet superagent=require('superagent')\n\n class Form extends React.Component{\n    constructor(props) {\n        console.log(\"props\",props)\n        super(props);\n\n        this.state = { url: 'url', method: 'GET' };\n\n    }\n\n    handleChange = (e) => {\n        console.log('hi', this.state);\n        this.setState({ url: e.target.value });\n\n        console.log('helloooooo', this.state);\n    };\n \n    handleChangeRadio = (e) => {\n        console.log('hi', this.state);\n        this.setState({ method: e.target.value });\n\n        console.log('helloooooo', this.state);\n    };\n    // if we dont want to use props here we can have it destructed directly {title,handler}\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(\"url\",this.state.url);\n        // let method1=`${this.state.method}`\n        switch(this.state.method) {\n            case 'GET':\n          superagent.get(`${this.state.url}`).then(data=>{\n            console.log(\"ddd\",data)\n            this.props.handler(data.body.count,data.body,data.header);\n          })\n              break;\n            case 'POST':\n         superagent.post(`${this.state.url}`).then(data=>console.log(\"ddd\",data))\n              break;\n        case 'PUT':\n        superagent.put(`${this.state.url}`).then(data=>console.log(\"ddd\",data))\n            break;\n        case 'DELETE':\n        superagent.delete(`${this.state.url}`).then(data=>console.log(\"ddd\",data))\n         break;\n            default:\n              // code block\n          }\n       \n        // fetch(`${this.state.url}`, {\n        //     method: `${this.state.method}`, \n        //     headers: {\n        //       'Content-Type': 'application/json',\n        //     }\n        //   })\n        //   .then(response =>{\n        //     console.log(\"data\",response)\n        //       return  response.json()})\n        //   .then((data) => {\n              \n        //    console.log(\"data\",data)\n        //      this.props.handler(data.count,data);\n               \n        //  });\n    };\n   render(){\n    return (\n        <main>\n       <form onSubmit={this.handleSubmit}>\n               <label for=\"fname\">URL:<input type=\"text\" onChange={this.handleChange}></input></label>\n              <br></br>\n                <br></br>\n             <label for=\"GET\">GET<input  type=\"radio\" id=\"GET\" name=\"method\" onChange={this.handleChangeRadio} value=\"GET\"></input></label>\n               \n              <label for=\"POST\">POST <input type=\"radio\" id=\"POST\" name=\"method\" onChange={this.handleChangeRadio} value=\"POST\"></input></label>\n               \n            <label for=\"PUT\">PUT <input type=\"radio\" id=\"PUT\" name=\"method\" onChange={this.handleChangeRadio} value=\"PUT\"></input></label>\n            \n          <label for=\"DELETE\">DELETE  <input type=\"radio\" id=\"DELETE\" name=\"method\" onChange={this.handleChangeRadio} value=\"DELETE\"></input></label>\n      \n          <button data-testid=\"button\" type=\"submit\" onClick={this.handleClick}>GO! </button>\n   \n      </form >\n      </main>\n      )}\n}\n\nexport default Form;\n\n\n// class Main extends React.Component {\n//     constructor(props) {\n//       super(props);\n\n//       this.state = { url: 'url',method:'GET' };\n\n//     }\n\n//     handleChange = (e) => {\n//       console.log('hi', this.state);\n//       this.setState({ url: e.target.value });\n\n//       console.log('helloooooo', this.state);\n//     };\n//     handleChangeRadio = (e) => {\n//       console.log('hi', this.state);\n//       this.setState({ method: e.target.value });\n\n//       console.log('helloooooo', this.state);\n//     };\n//     handleClick = (e) => {\n//         const url = this.state.url\n//         const method = this.state.method\n//   console.log(url,method)\n//       this.setState({url,method});\n//       console.log('hello');\n//       e.preventDefault();\n//     };\n//     render() {\n//       return (\n//         <main>\n//           <form>\n//           <label for=\"fname\">URL:<input type=\"text\" onChange={this.handleChange} /><button type=\"submit\" onClick={this.handleClick}>GO!</button>\n//           </label>\n//           <br></br>\n//           <br></br>\n//           <label for=\"GET\">GET<input type=\"radio\" id=\"GET\" name=\"method\" onChange={this.handleChangeRadio} value=\"GET\"></input></label>\n\n//            <label for=\"POST\">POST <input type=\"radio\" id=\"POST\" name=\"method\" onChange={this.handleChangeRadio} value=\"POST\"></input></label>\n\n//          <label for=\"PUT\">PUT <input type=\"radio\" id=\"PUT\" name=\"method\" onChange={this.handleChangeRadio} value=\"put\"></input></label>\n\n//          <label for=\"DELETE\">DELETE  <input type=\"radio\" id=\"DELETE\" name=\"method\" onChange={this.handleChangeRadio} value=\"DELETE\"></input></label>\n//           </form>\n//           <div>\n//           <span>{this.state.method} </span>\n//           <span>{this.state.url} </span>\n\n//           </div>\n\n//         </main>\n//       );\n//     }\n//   }\n\n\n\n// export default Main;","import './Footer.scss';\n\nconst Footer = () => <footer>@2018 Code Fellows</footer>;\nexport default Footer;","import React from 'react';\nimport ReactJson from 'react-json-view'\nexport default function Results({count,results,header}) {\n  return (\n   <div>\n     <p>count:{count}</p>\n     <p id=\"output\"><ReactJson name=\"Header\" src={header} theme=\"monokai\" /></p>\n     <p>response:<ReactJson  name=\"response\" src={results} theme=\"monokai\" /></p>\n   </div>\n  );\n}","\n\nimport React from 'react';\nimport Header from './Header';\nimport Form from './Form';\nimport Footer from './Footer';\n\nimport Results from './Results';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Count:0 ,\n      Results :[],\n      headers:{},\n      num:0,\n    };\n  }\n  handleForm = (count,results,header) => {\n    console.log('Hi from the App', results);\n    this.setState({Count:count,Results:results,headers:header });\n  };\n  // handleDelete = (name) => {\n  //   const newPeople = this.state.people.filter(\n  //     (person) => person.name !== name\n  //   );\n  //   console.log(newPeople);\n  //   this.setState({ people: newPeople });\n  // };\n  // PROPS\n  // it helps us to send data and functions to components\n  // it sent using normal html attribute format (x={y})\n  render() {\n    // console.log(this);\n    return (\n      <>\n       \n        <Header  />\n \n        <Form title={'Get Star Wars People'} handler={this.handleForm} num={this.num} />\n        <Results  count={this.state.Count} results ={this.state.Results}  header={this.state.headers} />\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n// function App() {\n//   return (\n//     <>\n//       <Header />\n//       <Main/>\n//       <Footer />\n//     </>\n//   );\n// }\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}